---
description: "version management and release process"
---

# Version Management Guidelines

BongoCat follows [Semantic Versioning](https://semver.org/) with automated version management scripts.

## Version Files to Update
When changing versions, these files need to be synchronized:
- [Info.plist](mdc:Info.plist) - CFBundleShortVersionString and CFBundleVersion
- [Package.swift](mdc:Package.swift) - If version is specified there
- [CHANGELOG.md](mdc:CHANGELOG.md) - Version entries and release dates

## Automated Scripts
Use the provided scripts in [Scripts/](mdc:Scripts/) directory:

### Version Management
- **[bump_version.sh](mdc:Scripts/bump_version.sh)** - Automatically updates version numbers across all files
- **[check_version.sh](mdc:Scripts/check_version.sh)** - Verifies version consistency
- **[build.sh](mdc:Scripts/build.sh)** - Builds and tests the application
- **[package_app.sh](mdc:Scripts/package_app.sh)** - Creates distributable DMG

## Semantic Versioning Rules

### MAJOR (x.0.0)
- Breaking changes to existing functionality
- Incompatible API changes
- Major architectural changes

### MINOR (x.y.0)
- New features that are backwards compatible
- New menu items or settings
- New animation types or customization options
- Performance improvements

### PATCH (x.y.z)
- Bug fixes that are backwards compatible
- Small UI improvements
- Documentation updates
- Performance optimizations without feature changes

## Release Process
1. **Complete feature development**
2. **Run tests**: `./Scripts/test.sh`
3. **Update changelog**: Move unreleased items to new version section
4. **Bump version**: `./Scripts/bump_version.sh [major|minor|patch]`
5. **Verify version consistency**: `./Scripts/check_version.sh`
6. **Build and test**: `./Scripts/build.sh`
7. **Package for distribution**: `./Scripts/package_app.sh`
8. **Commit and tag**: Git commit with version tag

## Current Version Tracking
- Check current version in [Info.plist](mdc:Info.plist)
- Version format: `MAJOR.MINOR.PATCH` (e.g., 1.0.0)
- Build number format: `YYYY.MM` (e.g., 2025.07)

## Version Communication
- Update [README.md](mdc:README.md) if installation instructions change
- Ensure [CHANGELOG.md](mdc:CHANGELOG.md) has proper version sections
- Consider updating GitHub releases with changelog content
